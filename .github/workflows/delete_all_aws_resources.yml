name: DELETE Infrastructure
on:
  workflow_dispatch:
    inputs:
      aws-region:
        description: AWS Region
        required: true
        default: 'eu-central-1'
        type: string
      project_id:
        description: Project ID (For the name of the Prefect blocks, ...) #NOTE: It can be the CU Task ID
        required: true
        default: '34aghxe'


env:
  PROJECT_ID: ${{ github.event.inputs.project_id }}
  PROJECT: ${{ github.event.inputs.project_id }}-prj
  ECR_REPO: ${{ github.event.inputs.project_id }}-ecr
  ECS_CLUSTER: ${{ github.event.inputs.project_id }}-ecs 
  S3_BUCKET: ${{ github.event.inputs.project_id }}-s3
  AWS_REGION: ${{ github.event.inputs.aws-region }}

jobs:
  delete-prefect-stack: #TODO: run python files to delete Prefect resources
        - name: Upload to S3 - covid_pred.py flow
        working-directory: ./deployment_PrefectFargate
        id: covid_pred 
        run: prefect deployment build ./covid_pred.py:covid_prediction -n $PROJECT -sb s3/$BLOCK -q $PROJECT -v $GITHUB_SHA -a -t tag_CovidPrev_Fargate --param Prov_St=$PROV_ST --param run_id=$RUN_ID  --cron "$CRON_SCH" --timezone "$TIMEZONE" #--interval 120 
        #NOTE: this deployment is going to run as independent ECS Task, independent from the ECS Task where the Prefect Agent ist (as explained in Anna's tutorial linked in my CUTask 34aghxe) 


  delete-aws-stack:
    runs-on: ubuntu-latest
    needs: delete-prefect-stack
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Delete ECR repository
        continue-on-error: true
        run: |
          aws ecr delete-repository --repository-name ${{ env.ECR_REPO }} --force
          aws cloudformation delete-stack --stack-name "ecr-stack-${{ env.PROJECT_ID }}"
          aws cloudformation wait stack-delete-complete --stack-name "ecr-stack-${{ env.PROJECT_ID }}"

      - name: Delete ECS agent service
        continue-on-error: true
        run: |
          aws cloudformation delete-stack --stack-name "ecs-stack-${{ env.PROJECT_ID }}"
          aws cloudformation wait stack-delete-complete --stack-name "ecs-stack-${{ env.PROJECT_ID }}"

      - name: Delete S3 Bucket
        continue-on-error: true
        run: |
          aws s3 rb s3://${{ env.S3_BUCKET }}  --force  
          aws cloudformation delete-stack --stack-name "s3-stack-${{ env.PROJECT_ID }}"
          aws cloudformation wait stack-delete-complete --stack-name "s3-stack-${{ env.PROJECT_ID }}"

      - name: All AWS resources deleted
        run: echo '### All AWS resources deleted! :tada:' >> $GITHUB_STEP_SUMMARY
